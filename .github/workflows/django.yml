name: Deploy Django to EC2

on:
  push:
    branches:
      - main  # or the branch you want to trigger deployment from

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use Ubuntu-based runners for CI
    steps:
      # Step 1: Checkout code from GitHub
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Set Python version you are using

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt  # Make sure your requirements are listed

      # Step 4: Run migrations (optional but recommended)
      - name: Run migrations
        run: |
          source env/bin/activate
          python manage.py migrate

    
      # Step 6: Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}  # The IP address of your EC2 instance
          username: ubuntu               # EC2 username
          key: ${{ secrets.EC2_SSH_KEY }}  # Add private key as a secret in GitHub
          port: 22
          script: |
            cd /home/ubuntu/EliteNest1
            git pull origin main   # Pull latest changes (or tar if packaging)
            
            # Ensure virtual environment is activated
            source env/bin/activate

            # Install the latest dependencies (if any)
            pip install --upgrade pip
            pip install -r requirements.txt
            
            # Run database migrations
            python manage.py migrate

            # Collect static files
            python manage.py collectstatic --noinput

            # Restart Gunicorn service
            sudo systemctl restart gunicorn

            # Reload Nginx to apply changes
            sudo systemctl reload nginx

            # Check Gunicorn service status to ensure it's running
            sudo systemctl status gunicorn
